@import "../../styles/variables.module.css";

.container {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.loadingContainer {
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  padding-top: 60px; /* Match header height */
  background-color: #f8f9fa;
}

.loading {
  padding: var(--spacing-md);
  color: var(--color-text-secondary);
  font-size: var(--font-size-base);
}

.messageArea {
  display: flex;
  flex-direction: column;
  height: 100%;
  padding-top: 60px; /* Header height */
  position: relative;
}

.header {
  padding-top: 100px;
  position: fixed;
  top: 60px; /* Position below main header */
  left: 0;
  right: 0;
  z-index: 10;
  display: flex;
  align-items: center;
  padding: var(--spacing-md) var(--spacing-lg);
  background-color: white;
  border-bottom: 1px solid var(--color-border);
  gap: var(--spacing-md);
}

.backButton {
  background: none;
  border: none;
  cursor: pointer;
  padding: var(--spacing-sm);
  border-radius: var(--radius-md);
  color: var(--color-text-secondary);
  display: flex;
  align-items: center;
}

.backButton:hover {
  background-color: var(--color-secondary);
}

.header h2 {
  margin: 0;
  font-size: var(--font-size-lg);
  font-weight: 500;
  color: var(--color-text-primary);
}

.messageContainer {
  flex-grow: 1;
  overflow-y: auto;
  padding: var(--spacing-lg);
  padding-top: calc(
    var(--spacing-lg) + 60px
  ); /* Account for conversation header */
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md);
  background-color: #f8f9fa;
  margin-bottom: 70px; /* Space for input container */
}

.message {
  max-width: 70%;
  display: flex;
  margin-bottom: var(--spacing-sm);
}

.messageContent {
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--radius-lg);
  position: relative;
}

.sent {
  margin-left: auto;
}

.sent .messageContent {
  background-color: var(--color-primary);
  color: white;
  border-bottom-right-radius: var(--radius-sm);
}

.received {
  margin-right: auto;
}

.received .messageContent {
  background-color: white;
  border: 1px solid var(--color-border);
  border-bottom-left-radius: var(--radius-sm);
  color: var(--color-text-primary);
}

.messageTime {
  font-size: var(--font-size-xs);
  opacity: 0.8;
  margin-left: var(--spacing-sm);
  white-space: nowrap;
}

.inputContainer {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  padding: var(--spacing-md);
  background-color: white;
  border-top: 1px solid var(--color-border);
  display: flex;
  gap: var(--spacing-sm);
}

.input {
  flex-grow: 1;
  padding: var(--spacing-sm) var(--spacing-md);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-md);
  font-size: var(--font-size-base);
}

.input:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 1px var(--color-primary);
}

.sendButton {
  background-color: var(--color-primary);
  color: white;
  border: none;
  border-radius: var(--radius-md);
  padding: var(--spacing-sm);
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.2s;
}

.sendButton:hover {
  background-color: var(--color-primary-dark);
}

/* Add these to your ConversationDetail.module.css */

.messageHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--spacing-xs);
  font-size: var(--font-size-sm);
}

.username {
  font-weight: 500;
  color: inherit;
  opacity: 0.8;
}

.timestamp {
  font-size: var(--font-size-xs);
  opacity: 0.7;
  margin-left: var(--spacing-sm);
}

/* Status bar styling */
.statusBar {
  position: sticky;
  top: 120px; /* Below both headers */
  z-index: 9;
  padding: var(--spacing-sm) var(--spacing-lg);
  background-color: white;
  border-bottom: 1px solid var(--color-border);
}

.statusInfo {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.status {
  padding: var(--spacing-xs) var(--spacing-sm);
  border-radius: var(--radius-md);
  font-size: var(--font-size-sm);
  font-weight: 500;
}

.status.active {
  background-color: #e3f2fd;
  color: #1976d2;
}

.status.pending {
  background-color: #fff3e0;
  color: #f57c00;
}

.status.completed {
  background-color: #e8f5e9;
  color: #388e3c;
}

.status.rejected {
  background-color: #ffebee;
  color: #d32f2f;
}

/* Sidebar styling */
.sidebar {
  position: fixed;
  right: 0;
  top: 60px;
  bottom: 0;
  width: 300px;
  background-color: white;
  border-left: 1px solid var(--color-border);
  padding: var(--spacing-lg);
  overflow-y: auto;
}

.requestDetails {
  margin-bottom: var(--spacing-xl);
}

.requestInfo {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-sm);
}

.infoItem {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  color: var(--color-text-secondary);
}

.participantInfo {
  margin-top: var(--spacing-xl);
}

.participant {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  padding: var(--spacing-sm) 0;
  color: var(--color-text-secondary);
}

/* Proposal actions */
.proposalActions {
  display: flex;
  gap: var(--spacing-sm);
}

.acceptButton,
.rejectButton {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--radius-md);
  font-size: var(--font-size-sm);
  font-weight: 500;
  cursor: pointer;
  border: none;
  transition: all 0.2s;
}

.acceptButton {
  background-color: #e8f5e9;
  color: #388e3c;
}

.acceptButton:hover {
  background-color: #c8e6c9;
}

.rejectButton {
  background-color: #ffebee;
  color: #d32f2f;
}

.rejectButton:hover {
  background-color: #ffcdd2;
}

/* Adjust main container to account for sidebar */
.conversationContainer {
  margin-right: 300px;
  height: 100vh;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .sidebar {
    display: none;
  }

  .conversationContainer {
    margin-right: 0;
  }
}

/* Safe area inset padding for iOS devices */
@supports (padding: max(0px)) {
  .inputContainer {
    padding-bottom: max(var(--spacing-md), env(safe-area-inset-bottom));
  }

  .messageContainer {
    padding-bottom: max(70px, calc(70px + env(safe-area-inset-bottom)));
  }
}
